### This file was generated by Nexus Schema
### Do not make changes to this file directly


type ApiKey {
  environment: EnvironmentEnum!
  id: String!
  name: String!
  secret: String!
}

type AuthPayload {
  token: String
  user: User
}

type Condition {
  anotherEnvironmentConditionId: String
  environment: EnvironmentEnum!
  id: String!
  name: String!
  projectId: String!
  rules: [Rule]!
}

input ConditionInputType {
  boolean_value: Boolean
  id: String
  integer_value: Int
  json_value: JSONObject
  name: String!
  rules: [RuleInputType!]! = []
  string_value: String
}

type ConditionValue {
  boolean_value: Boolean
  condition: Condition
  conditionId: String!
  id: String!
  integer_value: Int
  json_value: JSONObject
  parameterId: String!
  string_value: String
}

enum CountryEnum {
  saudi_arabia
  united_states
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

enum EnvironmentEnum {
  development
  production
}

type FormattedParameters {
  parameters: JSONObject
}

type Identity {
  country: CountryEnum
  environment: EnvironmentEnum!
  id: String!
  identity: String!
  language: LanguageEnum
  parameters: [IdentityParameter]
  platform: PlatformEnum
  project: Project
  projectId: String!
  userId: String!
}

input IdentityInputType {
  country: CountryEnum
  environment: EnvironmentEnum!
  identity: String!
  language: LanguageEnum
  platform: PlatformEnum
}

type IdentityParameter {
  id: String!
  identityId: String
  isOverwritten: Boolean!
  overwritten_boolean_value: Boolean
  overwritten_integer_value: Int
  overwritten_json_value: JSONObject
  overwritten_string_value: String
  parameter: Parameter
  parameterId: String!
}

input IdentityParameterInputType {
  overwritten_boolean_value: Boolean
  overwritten_integer_value: Int
  overwritten_json_value: JSONObject
  overwritten_string_value: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum LanguageEnum {
  arabic
  english
}

type Mutation {
  createCondition(data: ConditionInputType!, projectId: String!): Condition
  createIdentity(data: IdentityInputType!, projectId: String!): Identity
  createParameter(data: ParameterInputType!, environment: EnvironmentEnum!, projectId: String!): Parameter
  createProject(name: String!): Project
  deleteCondition(conditionId: String!): Condition
  deleteIdentity(identityId: String!): Identity
  deleteParameter(parameterId: String!): Parameter
  deleteProject(projectId: String!): Project
  login(email: String!, password: String!): AuthPayload
  resetIdentityParameter(identityParameterId: String!): IdentityParameter
  revokeApiKey(apiKeyId: String!): ApiKey
  signup(email: String!, name: String!, password: String!): AuthPayload
  updateCondition(conditionId: String!, data: ConditionInputType!): Condition
  updateIdentityParameter(data: IdentityParameterInputType!, identityParameterId: String!): IdentityParameter
  updateParameter(data: ParameterInputType!, parameterId: String!): Parameter
  verifyUser(userId: String!, verificationCode: String!): User
}

type Parameter {
  anotherEnvironmentParameterId: String
  boolean_value: Boolean
  conditionValues: [ConditionValue]!
  enabled: Boolean!
  environment: EnvironmentEnum!
  id: String!
  integer_value: Int
  json_value: JSONObject
  parameter: String!
  projectId: String!
  string_value: String
  value_type: ValueTypeEnum!
}

input ParameterInputType {
  boolean_value: Boolean
  conditions: [ConditionInputType!]! = []
  enabled: Boolean! = false
  integer_value: Int
  json_value: JSONObject
  parameter: String!
  string_value: String
  value_type: ValueTypeEnum!
}

enum PlatformEnum {
  android
  ios
  web
}

type Project {
  apiKeys: [ApiKey]
  id: String!
  name: String!
  parameters: [Parameter]
  userId: String!
}

type Query {
  apiKeys(userId: String!): [ApiKey]
  conditions(environment: EnvironmentEnum!, projectId: String!): [Condition]
  formattedParameters(projectId: String!): FormattedParameters
  getIdentity(identity: String!): Identity
  getParameter(parameterId: String!): Parameter
  identities(environment: EnvironmentEnum!, projectId: String!): [Identity]
  identityFormattedParameters(identityId: String!): FormattedParameters
  parameters(environment: EnvironmentEnum!, projectId: String!): [Parameter]
  projects: [Project]
  users: [User]
}

type Rule {
  before_datetime: Boolean
  conditionId: String!
  country: String
  datetime: DateTimeISO
  id: String!
  language: LanguageEnum
  platform: PlatformEnum
  rule: RuleEnum!
}

enum RuleEnum {
  country
  datetime
  language
  platform
}

input RuleInputType {
  before_datetime: Boolean
  country: CountryEnum
  datetime: DateTimeISO
  id: String
  language: LanguageEnum
  platform: PlatformEnum
  rule: RuleEnum!
}

type User {
  email: String
  id: String!
  name: String
  projects: [Project]
  verification_code: String
  verified: Boolean
}

enum ValueTypeEnum {
  boolean
  integer
  json
  string
}